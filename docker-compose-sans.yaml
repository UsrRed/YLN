version: "3.8"
services:
  nginx1:
    image: ${VERSION_NGINX1}
    env_file:
      - ../sae501-502-theotime-martel/.env
    ports:
      - ${PORT_HOTE_NGINX1}:${PORT_CONTAINER_NGINX1}
    restart: always
    volumes:
      - ../sae501-502-theotime-martel/public:/usr/share/nginx/html:z
      - ../sae501-502-theotime-martel/website/Pages/configNGINX:/etc/nginx/conf.d:z
      - ../sae501-502-theotime-martel/opensslkeys:/home:z
      - ../sae501-502-theotime-martel/website/Pages/ErrorPages/HTML_Template_http_codes:/usr/share/Error/:z
    container_name: ${NAME_NGINX1}
    networks:
      sae:
        ipv4_address: ${IP_NGINX1}
    links:
      - ${NAME_PHP}

  nginx2:
    image: ${VERSION_NGINX2}
    env_file:
      - ../sae501-502-theotime-martel/.env
    ports:
      - ${PORT_HOTE_NGINX2}:${PORT_CONTAINER_NGINX2}
    restart: always
    volumes:
      - ../sae501-502-theotime-martel/public:/usr/share/nginx/html:z
      - ../sae501-502-theotime-martel/website/Pages/configNGINX:/etc/nginx/conf.d:z
      - ../sae501-502-theotime-martel/opensslkeys:/home:z
      - ../sae501-502-theotime-martel/website/Pages/ErrorPages/HTML_Template_http_codes:/usr/share/Error/:z
    container_name: ${NAME_NGINX2}
    networks:
      sae:
        ipv4_address: ${IP_NGINX2}
    links:
      - ${NAME_PHP}

  haproxy:
    build:
      context: .
      dockerfile: ${DOCKERFILE_HAPROXY}
    env_file:
      - ../sae501-502-theotime-martel/.env
    container_name: ${NAME_HAPROXY}
    ports:
      - ${PORT_HOTE_HAPROXY}:${PORT_CONTAINER_HAPROXY}
    restart: always
    volumes:
      - ../sae501-502-theotime-martel/opensslkeys/myserver.pem:/etc/ssl/certs/myserver.pem:z
      - ../sae501-502-theotime-martel/loadbalancing/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:z
    depends_on:
      - ${NAME_NGINX1}
      - ${NAME_NGINX2}
    networks:
      sae:
        ipv4_address: ${IP_HAPROXY}

  mysql-master:
    image: ${VERSION_MYSQL_MASTER}
    env_file:
        - ../sae501-502-theotime-martel/.env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    container_name: ${NAME_MASTER}
    ports:
      - ${PORT_HOTE_MYSQL_MASTER}:${PORT_CONTAINER_MYSQL_MASTER}
    restart: always
    volumes:
      - ../sae501-502-theotime-martel/website/Pages/configBDD/maitre/my.cnf:/etc/my.cnf:z
      - db_data:/var/lib/mysql:z
    networks:
      sae:
        ipv4_address: ${IP_MYSQL_MASTER}

  mysql-slave:
    image: ${VERSION_MYSQL_SLAVE}
    env_file:
      - ../sae501-502-theotime-martel/.env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    container_name: ${NAME_SLAVE}
    ports:
      - ${PORT_HOTE_MYSQL_SLAVE}:${PORT_CONTAINER_MYSQL_SLAVE}
    restart: always
    volumes:
      - ../sae501-502-theotime-martel/website/Pages/configBDD/slave/my.cnf:/etc/my.cnf:z
      - db_data_esclave:/var/lib/mysql:z
    networks:
      sae:
        ipv4_address: ${IP_MYSQL_SLAVE}

  php:
    build:
      context: .
      dockerfile: ${DOCKERFILE_PHP}
    env_file:
      - ../sae501-502-theotime-martel/.env
    ports:
      - ${PORT_HOTE_PHP}:${PORT_CONTAINER_PHP}
    restart: always
    container_name: ${NAME_PHP}
    volumes :
      - ../sae501-502-theotime-martel/public:/usr/share/nginx/html:z
      - ../sae501-502-theotime-martel/composer:/usr/share/nginx/composer:z
      - ../sae501-502-theotime-martel/website:/home:z
     #- ../sae501-502-theotime-martel/.env:/home/website/Pages/configBDD/.env:z
    networks:
      sae:
        ipv4_address: ${IP_PHP}

  portainer:
    image: ${VERSION_PORTAINER}
    container_name: ${NAME_PORTAINER}
    ports:
      - ${PORT_HOTE_PORTAINER}:${PORT_CONTAINER_PORTAINER}
    volumes:
      - /run/podman/podman.sock:/var/run/docker.sock:z
      - ../sae501-502-theotime-martel/opensslkeys:/certs:z
      - portainer_data:/data:z
    restart: always
    command:
      --ssl
      --sslcert /certs/myserver.crt
      --sslkey /certs/myserver.key
    networks:
      sae:
        ipv4_address: ${IP_PORTAINER}


  #vault:
    #image: vault:1.13.3
    #container_name: vault
    #ports:
      #- "8200:8200"
    #environment:
      ##- VAULT_DEV_ROOT_TOKEN_ID=root_token
      #- VAULT_ADDR=http://127.0.0.1:8200
    #restart: always
    #networks:
      #sae:
        #ipv4_address: 172.18.0.155


volumes: 
  db_data:
  db_data_esclave:
  portainer_data:

networks:
  sae:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16

