version: "3.8"
services:
  nginx1:
    image: ${VERSION_NGINX1}
    env_file:
      - ../sae501-502-theotime-martel/.env
    ports:
      - ${PORT_HOTE_NGINX1}:${PORT_CONTAINER_NGINX1}
    restart: always
    volumes:
      - ../sae501-502-theotime-martel/public:/usr/share/nginx/html:z
      - ../sae501-502-theotime-martel/website/Pages/configNGINX:/etc/nginx/conf.d:z
      - ../sae501-502-theotime-martel/opensslkeys:/home:z
      - ../sae501-502-theotime-martel/website/Pages/ErrorPages/HTML_Template_http_codes:/usr/share/Error/:z
    container_name: ${NAME_NGINX1}
    networks:
      sae:
        ipv4_address: ${IP_NGINX1}
    links:
      - ${NAME_PHP}

  nginx2:
    image: ${VERSION_NGINX2}
    env_file:
      - ../sae501-502-theotime-martel/.env
    ports:
      - ${PORT_HOTE_NGINX2}:${PORT_CONTAINER_NGINX2}
    restart: always
    volumes:
      - ../sae501-502-theotime-martel/public:/usr/share/nginx/html:z
      - ../sae501-502-theotime-martel/website/Pages/configNGINX:/etc/nginx/conf.d:z
      - ../sae501-502-theotime-martel/opensslkeys:/home:z
      - ../sae501-502-theotime-martel/website/Pages/ErrorPages/HTML_Template_http_codes:/usr/share/Error/:z
    container_name: ${NAME_NGINX2}
    networks:
      sae:
        ipv4_address: ${IP_NGINX2}
    links:
      - ${NAME_PHP}

  haproxy:
    build:
      context: .
      dockerfile: ${DOCKERFILE_HAPROXY}
    env_file:
      - ../sae501-502-theotime-martel/.env
    container_name: ${NAME_HAPROXY}
    ports:
      - ${PORT_HOTE_HAPROXY}:${PORT_CONTAINER_HAPROXY} 
    volumes:
      - ../sae501-502-theotime-martel/opensslkeys/myserver.pem:/etc/ssl/certs/myserver.pem:z
      - ../sae501-502-theotime-martel/loadbalancing/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:z
    restart: always
    depends_on:
      - ${NAME_NGINX1}
      - ${NAME_NGINX2}
    networks:
      sae:
        ipv4_address: ${IP_HAPROXY}

  mysql-master:
    image: ${VERSION_MYSQL_MASTER}
    env_file:
        - ../sae501-502-theotime-martel/.env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    container_name: ${NAME_MASTER}
    ports:
      - ${PORT_HOTE_MYSQL_MASTER}:${PORT_CONTAINER_MYSQL_MASTER}
    volumes:
      - ../sae501-502-theotime-martel/website/Pages/configBDD/maitre/my.cnf:/etc/my.cnf:z
      - db_data:/var/lib/mysql:z
    restart: always
    networks:
      sae:
        ipv4_address: ${IP_MYSQL_MASTER}

  mysql-slave:
    image: ${VERSION_MYSQL_SLAVE}
    env_file:
      - ../sae501-502-theotime-martel/.env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    container_name: ${NAME_SLAVE}
    ports:
      - ${PORT_HOTE_MYSQL_SLAVE}:${PORT_CONTAINER_MYSQL_SLAVE}
    volumes:
      - ../sae501-502-theotime-martel/website/Pages/configBDD/slave/my.cnf:/etc/my.cnf:z
      - db_data_esclave:/var/lib/mysql:z
    restart: always
    networks:
      sae:
        ipv4_address: ${IP_MYSQL_SLAVE}

  php:
    build:
      context: .
      dockerfile: ${DOCKERFILE_PHP}
    env_file:
      - ../sae501-502-theotime-martel/.env
    ports:
      - ${PORT_HOTE_PHP}:${PORT_CONTAINER_PHP}
    container_name: ${NAME_PHP}
    volumes :
      - ../sae501-502-theotime-martel/public:/usr/share/nginx/html:z
      - ../sae501-502-theotime-martel/composer:/usr/share/nginx/composer:z
      - ../sae501-502-theotime-martel/website:/home:z
     #- ../sae501-502-theotime-martel/.env:/home/website/Pages/configBDD/.env:z
    restart: always
    networks:
      sae:
        ipv4_address: ${IP_PHP}

  loki:
    image: ${VERSION_LOKI}
    env_file:
      - ../sae501-502-theotime-martel/.env
    volumes:
      - ../sae501-502-theotime-martel/grafanaconfig/loki-config.yaml:/etc/loki/local-config.yaml:z
      - ../sae501-502-theotime-martel/opensslkeys/myserver.crt:/etc/loki/ssl/myserver.crt:z
      - ../sae501-502-theotime-martel/opensslkeys/myserver.key:/etc/loki/ssl/myserver.key:z
    ports:
      - ${PORT_HOTE_LOKI}:${PORT_CONTAINER_LOKI}
    restart: always
    networks:
      sae:
        ipv4_address: ${IP_LOKI}
    container_name: ${NAME_LOKI}

  promtail:
    image: ${VERSION_PROMTAIL}
    env_file:
      - ../sae501-502-theotime-martel/.env
    volumes:
      - ../sae501-502-theotime-martel/grafanaconfig/promtail-config.yaml:/etc/promtail/docker-config.yaml:z
      - /var/log:/var/log:z
    restart: always
    networks:
      sae:
        ipv4_address: ${IP_PROMTAIL}
    depends_on:
      - ${NAME_LOKI}
    container_name: ${NAME_PROMTAIL}

  grafana:
    image: ${VERSION_GRAFANA}
    env_file:
      - ../sae501-502-theotime-martel/.env
    ports:
      - ${PORT_HOTE_GRAFANA}:${PORT_CONTAINER_GRAFANA}
    depends_on:
      - ${NAME_LOKI}
    restart: always
    networks:
      sae:
        ipv4_address: ${IP_GRAFANA}
    container_name: ${NAME_GRAFANA}
    volumes:
      - ../sae501-502-theotime-martel/grafanaconfig/grafana.ini:/etc/grafana/grafana.ini:z
      - ../sae501-502-theotime-martel/opensslkeys/myserver.crt:/etc/grafana/ssl/myserver.crt:z
      - ../sae501-502-theotime-martel/opensslkeys/myserver.key:/etc/grafana/ssl/myserver.key:z
      - grafana_data:/var/lib/grafana:z


  portainer:
    image: ${VERSION_PORTAINER}
    container_name: ${NAME_PORTAINER}
    ports:
      - ${PORT_HOTE_PORTAINER}:${PORT_CONTAINER_PORTAINER}
    volumes:
      - /run/podman/podman.sock:/var/run/docker.sock:z
      - ../sae501-502-theotime-martel/opensslkeys:/certs:z
      - portainer_data:/data:z
    restart: always
    command:
      --ssl
      --sslcert /certs/myserver.crt
      --sslkey /certs/myserver.key
    networks:
      sae:
        ipv4_address: ${IP_PORTAINER}

  vault:
    image: vault:1.13.3
    container_name: vault
    ports:
      - "9200:8200"
    environment:
      #- VAULT_DEV_ROOT_TOKEN_ID=root_token
      - VAULT_ADDR=http://172.18.0.155:8200
      #- VAULT_CONFIG=/vault/config/vault-config.hcl    
    restart: always
    volumes:
      #- ./opensslkeys/myserver.crt:/vault/tls/server.crt:z
      #- ./opensslkeys/myserver.key:/vault/tls/server.key:z
      #- ./vaultconfig/vault-config.hcl:/vault/config/vault-config.hcl:z
      - vault_data:/vault/data:z
    networks:
      sae:
        ipv4_address: 172.18.0.155
    #cap_add:
      #- IPC_LOCK

  #--> podman logs vault | grep 'Root Token:' | tail -1 | cut -d ' ' -f3 > .token_vault.txt
  #--> vault kv put secret/my-secret username=admin password=Admin1! (stocker)
  #--> vault kv get secret/my-secret (récupérer tout)
  #--> password=$(vault kv get -field=password secret/my-secret) && echo "Mot de passe récupéré : $password"
  #--> (Sur PC HOTE) : test=$(podman exec -it vault /bin/sh -c "vault kv put secret/my-secret username=admin password=Admin1! && vault kv get secret/my-secret") && echo $test

  #----------------------------------------#

  #node-exporter:
    #image: prom/node-exporter:latest
    #container_name: node-exporter
    #pid: host
    #volumes:
      #- /:/host:ro,rslave
    #restart: always
    #environment:
      #NODE_ID: $(cat /etc/machine-id)
    #networks:
      #sae:
        #ipv4_address: 172.18.0.190

  #prometheus:
    #image: prom/prometheus
    #container_name: prometheus
    #ports:
      #- "9090:9090"
    #restart: always
    #volumes:
      #- ./prometheus.yml:/etc/prometheus/prometheus.yml:z
    #networks:
      #sae:
        #ipv4_address: 172.18.0.191
    #depends_on:
      #- node-exporter


volumes: 
  db_data:
  db_data_esclave:
  grafana_data:
  portainer_data:
  vault_data:

networks:
  sae:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16
